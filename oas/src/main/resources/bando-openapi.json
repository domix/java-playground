{"openapi": "3.1.0", "info": {"title": "Bando Spending Protocol REST API", "version": "1.3.0", "contact": {"name": "Bando Support", "email": "support@bando.cool", "url": "https://docs.bando.cool/"}, "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "description": "Bando Spending Protocol provides a global e-commerce API for purchasing digital products, such as gift cards, mobile top-ups, and eSIMs, using cryptocurrencies only."}, "servers": [{"url": "https://api.bando.cool/api/v1"}], "tags": [{"name": "Product", "description": "This section covers operations for managing digital products offered through the Bando Spending platform. The catalog is limited to virtual products such as gift cards, mobile phone top-ups, and eSIMs for now. All purchases are exclusively processed using cryptocurrencies, without the involvement of fiat currencies. The platform operates globally, and the product catalog supports filtering by country to display region-specific availability. Product resources include attributes such as name, description, price and applicable usage conditions."}, {"name": "Reference", "description": "This section handles operations related to user-provided references, which are required to validate transactions such as phone numbers, email addresses, or service identifiers. References help link purchases to specific user information and ensure the correct provisioning of products. \n\n\u26a0\ufe0f Note: The existing `/references/` endpoints are deprecated and will be decommissioned on **August 1, 2025**. For new implementations, please use the `/wallets/{address}/transactions/` endpoints."}, {"name": "Quote", "description": "This section provides operations to request conversion quotes for purchasing digital products using cryptocurrencies. A quote calculates the equivalent amount of digital assets (e.g., USDC) required to complete a purchase based on the product price in fiat currency. Quotes ensure pricing transparency before creating a spend transaction. \n\n\u26a0\ufe0f Quotes are designed to be used with idempotency keys to avoid duplicate transactions and ensure consistency in pricing."}, {"name": "Country", "description": "This section covers endpoints to retrieve information about supported countries, including filtering by region, subregion, and fiat currency. Country data includes ISO codes, currency, time zone, and other relevant details used across the Bando Spending Protocol."}, {"name": "GeoIp", "description": "This section allows retrieving country information based on IP geolocation. It is designed to help tailor product availability or user experience based on the user's approximate physical location."}, {"name": "Transaction", "description": "This section provides endpoints to retrieve information about spend transactions initiated in the Bando Spending Protocol. Transactions represent purchases of digital products (e.g., gift cards, mobile top-ups, eSIMs) paid with cryptocurrencies. \n\n\u26a0\ufe0f The `/transactions/{transactionId}/` endpoint is deprecated and will be decommissioned on **August 1, 2025**. Please use `/wallets/{address}/transactions/{transactionId}/` instead for retrieving transaction details."}, {"name": "Wallet", "description": "This section includes operations for interacting with blockchain wallet addresses within the Bando Spending Protocol. Wallets are used to manage user identity, track transaction history, and create new spending transactions. Endpoints also allow retrieving wallet state and transaction details filtered by wallet address."}, {"name": "Network", "description": "This section provides endpoints to list supported blockchain networks where the Bando Spending Protocol operates. Each network includes metadata such as chain ID, explorer URLs, and native token information."}, {"name": "Token", "description": "This section includes endpoints to retrieve the list of supported tokens available for transactions within a specific blockchain network, including details such as token address, symbol, and limits."}], "paths": {"/products/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Product"], "summary": "Get list of existing products", "deprecated": true, "description": "\u26a0\ufe0f This endpoint will be decommissioned on **August 11, 2025**. Please use `GET /products/grouped/` instead.", "parameters": [{"$ref": "#/components/parameters/PageNumber"}, {"$ref": "#/components/parameters/PageSize"}, {"$ref": "#/components/parameters/Brand"}, {"$ref": "#/components/parameters/Country"}, {"$ref": "#/components/parameters/ProductType"}, {"$ref": "#/components/parameters/ProductSubType"}], "responses": {"410": {"description": "Endpoint is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/products/grouped/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Product"], "summary": "Retrieve the list of available products, filtered by country and other attributes.", "parameters": [{"$ref": "#/components/parameters/Brand"}, {"$ref": "#/components/parameters/Country"}, {"$ref": "#/components/parameters/ProductType"}, {"$ref": "#/components/parameters/ProductSubType"}, {"$ref": "#/components/parameters/ProductCategory"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.GroupedProductsResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "401": {"description": "Unauthorized - API Token Missing or Unrecognized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "403": {"description": "Forbidden - IP Not Allowed", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/categories/": {"get": {"security": [{"ApiKey": []}], "tags": ["Categories"], "summary": "Get list of available product categories", "responses": {"200": {"description": "Successfully retrieved categories", "content": {"application/json": {"schema": {"type": "object", "properties": {"categories": {"type": "array", "items": {"type": "string"}, "description": "List of category names"}, "total": {"type": "integer", "description": "Total number of categories"}}}, "example": {"categories": ["Mobile Data", "Gaming Cards", "Travel Cards"], "total": 3}}}}, "401": {"description": "Unauthorized - API Token Missing or Unrecognized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "403": {"description": "Forbidden - IP Not Allowed", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/references/": {"post": {"tags": ["Reference"], "summary": "Create a new validated reference", "deprecated": true, "description": "\u26a0\ufe0f This endpoint will be decommissioned on **Aug 1, 2025**. Please use `POST /wallets/{address}/transactions/` instead.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.CreateValidatedReference"}}}}, "responses": {"410": {"description": "Endpoint is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}, "get": {"tags": ["Reference"], "summary": "Retrieve validated references", "deprecated": true, "description": "\u2620\ufe0f This endpoint will be decommissioned on **Aug 1, 2025**. No useful at all, No replacement.", "parameters": [{"name": "validationId", "in": "query", "description": "Validation ID to filter references", "required": false, "schema": {"type": "string"}}], "responses": {"410": {"description": "Endpoint is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/quotes/": {"post": {"tags": ["Quote"], "summary": "Get a conversion quote for fiat to digital assets", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.CreateQuote"}}}}, "responses": {"201": {"description": "Quote retrieved successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.Quote"}}}}, "400": {"description": "Bad Request - Invalid or missing parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/countries/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Country"], "summary": "Get list of countries", "parameters": [{"name": "region", "in": "query", "description": "Filter countries by region", "required": false, "schema": {"type": "string"}}, {"name": "subregion", "in": "query", "description": "Filter countries by subregion", "required": false, "schema": {"type": "string"}}, {"name": "fiatCurrency", "in": "query", "description": "Filter countries by fiat currency", "required": false, "schema": {"type": "string"}}, {"name": "search", "in": "query", "description": "Search in country name and capital", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.CountriesResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "401": {"description": "Unauthorized - API Token Missing or Unrecognized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "403": {"description": "Forbidden - IP Not Allowed", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/geoip/country/": {"get": {"security": [{"BearerAuth": []}], "tags": ["GeoIp", "Country"], "summary": "Get country information by IP address", "parameters": [{"name": "ip", "in": "query", "description": "IP addreess to get geodata.", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.Country"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "401": {"description": "Unauthorized - API Token Missing or Unrecognized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "403": {"description": "Forbidden - IP Not Allowed", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "404": {"description": "Not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/transactions/{transactionId}/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Transaction"], "summary": "Get transaction status and details", "deprecated": true, "description": "\u26a0\ufe0f This endpoint will be decommissioned on **Aug 1, 2025**. Please use `GET /wallets/{address}/transactions/{transactionId}` instead.", "parameters": [{"name": "transactionId", "in": "path", "description": "Transaction ID to retrieve", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"410": {"description": "Endpoint is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/networks/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Network"], "summary": "Get supported blockchain networks", "operationId": "getNetworks", "parameters": [{"$ref": "#/components/parameters/OptionalWalletAddress"}], "responses": {"200": {"description": "List of supported networks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.NetworkListResponse"}}}}, "400": {"$ref": "#/components/schemas/dto.ResponseError"}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/tokens/{networkKey}/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Token"], "summary": "Retrieve the list of supported tokens available for the specified blockchain network.", "parameters": [{"name": "networkKey", "in": "path", "required": true, "schema": {"type": "string"}, "description": "Network key identifier (e.g., arb, sol)"}, {"$ref": "#/components/parameters/OptionalWalletAddress"}], "responses": {"200": {"description": "List of supported tokens", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.TokenListResponse"}}}}, "400": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "/wallets/{address}/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Wallet"], "summary": "Get wallet address state", "operationId": "getWalletState", "parameters": [{"$ref": "#/components/parameters/WalletAddress"}, {"$ref": "#/components/parameters/IntegratorSlug"}], "responses": {"200": {"description": "Wallet state", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.WalletResponse"}}}}, "400": {"description": "Wrong parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "404": {"description": "Wallet not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "429": {"description": "Too Many Requests", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/wallets/{address}/transactions/": {"post": {"security": [{"BearerAuth": []}], "tags": ["Wallet"], "summary": "Create a new spend transaction", "description": "Creates a new spending transaction in the Bando Spending Protocol.", "operationId": "createSpendingTransaction", "parameters": [{"$ref": "#/components/parameters/WalletAddress"}, {"$ref": "#/components/parameters/IntegratorSlug"}, {"$ref": "#/components/parameters/QuoteIdempotencyKeyHeader"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.CreateSpendTransaction"}}}}, "responses": {"201": {"description": "Created spend transaction", "headers": {"Location": {"description": "URI of the newly created transaction", "schema": {"type": "string", "format": "uri-reference"}}, "Idempotency-Key": {"$ref": "#/components/headers/Idempotency-Key"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TransactionResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "401": {"description": "Unauthorized - API Token Missing or Unrecognized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "403": {"description": "Forbidden - IP Not Allowed", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "404": {"description": "Transactions not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "409": {"$ref": "#/components/responses/ConflictDuplicate"}, "429": {"description": "Too Many Requests", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "503": {"description": "Indicates the client should retry the spending transaction due to an on-chain failure caused by network congestion.", "headers": {"Retry-After": {"description": "Indicates how long in seconds to wait before retrying.", "schema": {"type": "string"}, "example": "10"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}, "get": {"security": [{"BearerAuth": []}], "tags": ["Wallet"], "summary": "Get transactions by wallet address", "operationId": "getWalletTransactions", "parameters": [{"$ref": "#/components/parameters/IntegratorSlug"}, {"$ref": "#/components/parameters/WalletAddress"}, {"name": "chainId", "in": "query", "description": "Blockchain network identifier", "required": false, "schema": {"type": "integer", "default": null}}, {"$ref": "#/components/parameters/PageNumber"}, {"$ref": "#/components/parameters/PageSize"}], "responses": {"200": {"description": "List of transactions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.WalletTransactionResponse"}}}}, "400": {"description": "Wrong parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "404": {"description": "Transactions not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "429": {"description": "Too Many Requests", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}, "/wallets/{address}/transactions/{transactionId}/": {"get": {"security": [{"BearerAuth": []}], "tags": ["Wallet"], "summary": "Get spend transaction status and details", "operationId": "getWalletTransactionStatus", "parameters": [{"$ref": "#/components/parameters/WalletAddress"}, {"name": "transactionId", "in": "path", "description": "Transaction ID to retrieve", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"$ref": "#/components/parameters/IntegratorSlug"}], "responses": {"200": {"description": "Transaction retrieved successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TransactionResponse"}}}}, "400": {"description": "Bad request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "404": {"description": "Transaction not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "412": {"description": "Wrong transaction query parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "429": {"description": "Too Many Requests", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}}}, "components": {"headers": {"Idempotency-Key": {"description": "Echoes the Idempotency-Key supplied in the request.", "schema": {"type": "string"}}}, "parameters": {"QuoteIdempotencyKeyHeader": {"name": "Idempotency-Key", "in": "header", "required": true, "description": "Quote Unique key that makes this request idempotent.", "schema": {"type": "string", "maxLength": 255}}, "WalletAddress": {"name": "address", "in": "path", "description": "User's wallet address", "required": true, "schema": {"type": "string"}}, "OptionalWalletAddress": {"name": "walletAddress", "in": "query", "description": "User's wallet address", "required": false, "schema": {"type": "string"}}, "IntegratorSlug": {"name": "integrator", "in": "query", "description": "Integrator slug unique identifier", "required": true, "schema": {"type": "string", "default": "bando"}}, "PageNumber": {"name": "pageNumber", "in": "query", "description": "Page number (starts from 1)", "required": false, "schema": {"type": "integer", "default": 1}}, "PageSize": {"name": "pageSize", "in": "query", "description": "Page size (number of items per page)", "required": false, "schema": {"type": "integer", "default": 100}}, "Brand": {"schema": {"type": "string"}, "name": "brand", "in": "query", "description": "Brand to filter"}, "Country": {"schema": {"type": "string"}, "name": "country", "in": "query", "description": "2 letter ISO code for the destination country to filter"}, "ProductType": {"schema": {"type": "string"}, "name": "type", "in": "query", "description": "Product type to filter"}, "ProductSubType": {"schema": {"type": "string"}, "name": "subType", "in": "query", "description": "Offer subtype to filter"}, "ProductCategory": {"schema": {"type": "string"}, "name": "category", "in": "query", "description": "Product category name to filter. Supports multiple categories with comma-separated values: category=Mobile Data,Gaming Cards"}}, "schemas": {"dto.TransactionReceipt": {"type": "object", "description": "", "properties": {"transactionReceipt": {"description": "OnChain transaction receipt", "$ref": "#/components/schemas/dto.OnChainTransactionReceipt"}}, "additionalProperties": false}, "dto.OnChainTransactionReceipt": {"type": "object", "description": "", "properties": {"hash": {"type": "string", "description": "OnChain transaction hash", "example": "0x6fd1f2b0c8cc2d63df046de3f3479a819efc954ed1ed363c1dbb43111488ea05"}, "virtualMachineType": {"type": "string", "example": "EVM", "description": "Blockchain Virtual Machine Type (SVM or EVM)"}}, "additionalProperties": false}, "dto.GroupedProductsResponse": {"type": "object", "description": "Catalog response for product searches", "properties": {"products": {"type": "array", "items": {"$ref": "#/components/schemas/ProductByType"}}}, "additionalProperties": false}, "ProductByType": {"type": "object", "properties": {"productType": {"type": "string", "description": "The type of product (e.g., GiftCard, TopUp, eSIM)."}, "brands": {"type": "array", "items": {"$ref": "#/components/schemas/Brand"}}}, "additionalProperties": false}, "Brand": {"type": "object", "properties": {"brandName": {"type": "string", "description": "Name of the brand (e.g., Amazon, Verizon, TravelSim)."}, "brandSlug": {"type": "string", "description": "slug of the brand (e.g., amazon, verizon, travelsim)."}, "imageUrl": {"description": "Brand Logo Image", "type": "string"}, "order": {"description": "Index to order the brands", "type": "integer"}, "variants": {"type": "array", "items": {"oneOf": [{"$ref": "#/components/schemas/dto.Esim"}, {"$ref": "#/components/schemas/dto.Topup"}, {"$ref": "#/components/schemas/dto.GiftCard"}]}}}, "additionalProperties": false}, "dto.Product": {"type": "object", "discriminator": {"propertyName": "productType"}, "properties": {"id": {"description": "Internal identifier", "type": "string"}, "fupId": {"description": "Internal identifier", "type": "string"}, "brand": {"description": "Brand of product", "type": "string"}, "country": {"description": "Destination country for products", "type": "string"}, "notes": {"description": "Notes included about the product", "type": "string"}, "sku": {"description": "Catalog SKU of the product", "type": "string"}, "price": {"description": "Price to customer", "$ref": "#/components/schemas/dto.Price"}, "productType": {"description": "Product type", "type": "string"}, "referenceType": {"description": "Reference type", "$ref": "#/components/schemas/dto.ReferenceType"}, "requiredFields": {"description": "Required fields", "type": "array", "items": {"description": "Required field", "$ref": "#/components/schemas/dto.ReferenceType"}}, "shortNotes": {"description": "Short notes for product", "type": "string"}, "subTypes": {"description": "Product subtypes", "type": "array", "items": {"description": "Subtype entry", "type": "string"}}, "categories": {"description": "Product categories in which this variant is available.", "type": "array", "items": {"description": "Category name", "type": "string"}}, "supportedCountries": {"description": "Supported countries", "type": "array", "items": {"description": "Supported country ISO 2", "type": "string"}}, "imageUrl": {"description": "Product Image", "type": "string"}, "evmServiceId": {"description": "Service ID for EVM networks", "type": "integer"}, "svmServiceId": {"description": "Service ID for SVM networks", "type": "integer"}}, "additionalProperties": false}, "dto.MobileData": {"type": "object", "description": "Mobile Data type Product", "properties": {"dataGB": {"description": "Amount of data included (0 when data is unlimited)", "type": "string"}, "dataSpeeds": {"description": "Available data speeds for destination", "type": "array", "items": {"description": "Data speed entries", "type": "string"}}, "dataUnlimited": {"description": "Flag for unlimited data", "type": "boolean"}, "durationDays": {"description": "Duration of the offer in days", "type": "string"}, "smsNumber": {"description": "Included SMS messages (0 when unlimited or not included, check smsUnlimited flag)", "type": "string"}, "smsUnlimited": {"description": "Flag whether SMS messaging is unlimited for offer", "type": "boolean"}, "voiceMinutes": {"description": "Voice minutes included (0 when unlimited or not included, check voiceUnlimited Flag)", "type": "string"}, "voiceUnlimited": {"description": "Flag whether voice minutes are unlimited for the offer", "type": "boolean"}}, "additionalProperties": false}, "dto.SendPriceData": {"type": "object", "description": "", "properties": {"sendCurrency": {"description": "Currency for the value", "type": "string"}, "sendPrice": {"description": "Price in string to prevent lose precision", "type": "string"}}, "additionalProperties": false}, "dto.Esim": {"type": "object", "description": "esim Product", "allOf": [{"$ref": "#/components/schemas/dto.Product"}, {"$ref": "#/components/schemas/dto.MobileData"}, {"properties": {"roamingCountryIso2": {"description": "2 letter ISO country code", "type": "string"}, "roamingDataSpeeds": {"description": "Available data speeds for destination", "type": "array", "items": {"description": "Data speed entries", "type": "string"}}}, "additionalProperties": false}]}, "dto.Topup": {"type": "object", "description": "esim Product", "allOf": [{"$ref": "#/components/schemas/dto.Product"}, {"$ref": "#/components/schemas/dto.MobileData"}, {"$ref": "#/components/schemas/dto.SendPriceData"}]}, "dto.GiftCard": {"type": "object", "description": "Gift Card Product", "allOf": [{"$ref": "#/components/schemas/dto.Product"}, {"$ref": "#/components/schemas/dto.SendPriceData"}]}, "dto.ReferenceType": {"type": "object", "description": "Reference Type descriptor", "properties": {"name": {"description": "Name of the reference type", "type": "string"}, "valueType": {"description": "Reference type value (string, number, etc)", "type": "string"}, "regex": {"description": "Regular expression to validate value", "type": "string"}}, "additionalProperties": false}, "dto.Price": {"type": "object", "description": "Pricing for product", "properties": {"fiatCurrency": {"description": "Price in FIAT currency", "type": "string"}, "fiatValue": {"description": "Price for the product in FIAT, in a string value to prevent lost precision", "type": "string"}, "stableCoinCurrency": {"description": "Price in a cripto stable coin like USDC or USDT", "type": "string"}, "stableCoinValue": {"description": "Price for the product in stable coin, in a string value to prevent lost precision", "type": "string"}}, "additionalProperties": false}, "dto.ResponseError": {"description": "API error responses", "type": "object", "properties": {"errorCode": {"description": "Error code for the error", "type": "string"}, "fields": {"description": "Supplemental information about fields in error (when available)", "type": "object", "additionalProperties": {"type": "string"}}, "message": {"description": "Detail message for the error", "type": "string"}}, "additionalProperties": false}, "regions": {"description": "List of available regions", "type": "string", "enum": ["Global", "Africa", "Asia", "Caribbean", "Central America", "Eastern Europe", "Western Europe", "North America", "Oceania", "South America", "South Asia", "Southeast Asia", "Middle East and North Africa"]}, "dto.ValidatedReference": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "description": "UUID identifier for the reference"}, "validationId": {"type": "string", "description": "Unique identifier for the reference validation"}, "referenceType": {"type": "string", "description": "Type of reference (e.g., phone number, email, service number)"}, "status": {"type": "string", "description": "Current status of the reference", "enum": ["PENDING", "VALIDATED", "FAILED", "EXPIRED", "COMPLETED"]}, "reference": {"type": "string", "description": "User-provided reference"}, "requiredFields": {"type": "object", "description": "Required fields for validating the reference in JSON format", "items": {"$ref": "#/components/schemas/dto.PurchaseRequiredField"}}, "createdAt": {"type": "string", "format": "date-time", "description": "Creation timestamp"}, "updatedAt": {"type": "string", "format": "date-time", "description": "Last update timestamp"}, "transactionIntent": {"description": "Transaction intent data", "$ref": "#/components/schemas/dto.TransactionIntent"}}, "additionalProperties": false}, "dto.TransactionIntent": {"type": "object", "allOf": [{"$ref": "#/components/schemas/dto.TransactionIntentCommand"}, {"properties": {"id": {"type": "string", "format": "uuid", "description": "UUID identifier for the transaction intent"}, "validatedReferenceId": {"type": "string", "format": "uuid", "description": "Reference to the validated reference"}, "status": {"type": "string", "description": "Current status of the transaction intent", "enum": ["PENDING", "PROCESSING", "COMPLETED", "FAILED", "ACTIVE", "INACTIVE"]}, "createdAt": {"type": "string", "format": "date-time", "description": "Creation timestamp"}, "updatedAt": {"type": "string", "format": "date-time", "description": "Last update timestamp"}}, "additionalProperties": false}]}, "dto.CreateSpendTransaction": {"type": "object", "allOf": [{"$ref": "#/components/schemas/dto.CreateValidatedReference"}, {"$ref": "#/components/schemas/dto.TransactionReceipt"}], "additionalProperties": false}, "dto.CreateValidatedReference": {"type": "object", "required": ["reference"], "properties": {"reference": {"type": "string", "description": "User-provided reference", "example": "some_email@someserver.io"}, "requiredFields": {"description": "Required fields for validating the reference in JSON format", "type": "array", "items": {"$ref": "#/components/schemas/dto.PurchaseRequiredField"}}, "transactionIntent": {"description": "Required fields for validating the reference in JSON format", "$ref": "#/components/schemas/dto.CreateValidatedReferenceTransactionIntent"}}, "additionalProperties": false}, "dto.CreateValidatedReferenceTransactionIntent": {"type": "object", "allOf": [{"$ref": "#/components/schemas/dto.TransactionIntentCommand"}], "additionalProperties": false}, "dto.TransactionIntentCommand": {"type": "object", "properties": {"sku": {"type": "string", "description": "Product SKU associated with the transaction", "example": "SOME_SKU"}, "quantity": {"type": "integer", "default": 1, "description": "Number of items in the transaction"}, "amount": {"type": "number", "format": "decimal", "description": "Transaction amount", "example": 125.5}, "chain": {"type": "string", "description": "Blockchain network identifier", "example": "42161"}, "token": {"type": "string", "description": "Token used for the transaction", "example": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"}, "wallet": {"type": "string", "description": "Wallet address", "example": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045"}, "integrator": {"type": "string", "description": "Integrator slug unique identifier", "example": "bando"}, "hasAcceptedTerms": {"type": "boolean", "description": "Wallet owner has accepted the terms"}, "quoteId": {"type": "integer", "description": "Quote identifier reference for the transaction", "nullable": false}}, "additionalProperties": false}, "dto.PurchaseRequiredField": {"type": "object", "description": "Purchase required fields", "properties": {"key": {"description": "Name of required field", "type": "string", "example": "Name"}, "value": {"description": "Value for the required field", "type": "string", "example": "Linus"}}, "additionalProperties": false}, "dto.CreateQuote": {"type": "object", "required": ["fiatCurrency", "digitalAsset", "sku", "chainId"], "properties": {"fiatCurrency": {"type": "string", "description": "Fiat currency for request."}, "digitalAsset": {"type": "string", "description": "Requested stable coin used for pricing (e.g., USDC)"}, "sku": {"type": "string", "description": "Product identifier"}, "chainId": {"type": "integer", "description": "Network identifier"}, "integrator": {"type": "string", "description": "Integrator name"}, "sender": {"type": "string", "description": "Sender address for the transaction"}}, "additionalProperties": false}, "dto.Quote": {"type": "object", "properties": {"id": {"type": "integer", "description": "Quote identifier"}, "fiatCurrency": {"type": "string", "description": "Local fiat currency for product pricing."}, "fiatAmount": {"type": "string", "description": "Price in fiat currency"}, "digitalAsset": {"type": "string", "description": "Requested stablecoin used for pricing (e.g., USDC)"}, "digitalAssetAmount": {"type": "string", "description": "Product price in digital asset"}, "totalAmount": {"type": "string", "description": "Product price + fees in digital asset"}, "feeAmount": {"type": "string", "description": "Fee amount in digital asset"}, "sku": {"type": "string", "description": "Product sku"}, "transactionRequest": {"$ref": "#/components/schemas/dto.TransactionRequest", "description": "ERC20 transaction data"}}, "additionalProperties": false}, "dto.TransactionRequest": {"type": "object", "description": "ERC20 transaction data", "properties": {"chainId": {"type": "integer", "description": "Blockchain network identifier", "example": 1}, "type": {"type": "integer", "description": "Transaction type (2 for EIP-1559)", "example": 2}, "to": {"type": "string", "description": "Destination address for the transaction"}, "data": {"type": "string", "description": "Transaction calldata"}, "value": {"type": "string", "description": "Value in wei"}, "gas": {"type": "string", "description": "Gas limit in hex format"}, "gasLimit": {"type": "string", "description": "Gas limit in hex format"}, "maxFeePerGas": {"type": "string", "description": "Maximum fee per gas for transactions"}, "maxPriorityFeePerGas": {"type": "string", "description": "Maximum priority fee per gas for transactions"}}, "required": ["chainId", "type", "to", "data", "value", "gas"], "additionalProperties": false}, "dto.CountriesResponse": {"type": "object", "description": "Response wrapper for countries list", "properties": {"message": {"type": "string", "description": "Response message", "example": "Countries retrieved successfully"}, "data": {"type": "object", "properties": {"count": {"type": "integer", "description": "Total number of countries in results", "example": 250}, "results": {"type": "array", "items": {"$ref": "#/components/schemas/dto.Country"}}}}}, "additionalProperties": false}, "dto.Country": {"type": "object", "description": "Country information", "properties": {"id": {"type": "string", "format": "uuid", "description": "Unique identifier for the country", "example": "123e4567-e89b-12d3-a456-426614174000"}, "name": {"type": "string", "description": "The full name of the country", "example": "United States"}, "isoAlpha2": {"type": "string", "description": "The ISO 3166-1 alpha-2 code", "example": "US", "minLength": 2, "maxLength": 2}, "isoAlpha3": {"type": "string", "description": "The ISO 3166-1 alpha-3 code", "example": "USA", "minLength": 3, "maxLength": 3}, "isCurrent": {"type": "boolean", "description": "true if based on the request, we detect it as the country of origin", "example": "true", "nullable": false}, "capital": {"type": "string", "description": "The capital city", "example": "Washington, D.C.", "nullable": true}, "fiatCurrency": {"type": "string", "description": "The fiat currency of the country", "example": "USD"}, "region": {"type": "string", "description": "The geographical region", "example": "North America"}, "subregion": {"type": "string", "description": "The geographical subregion", "example": "Northern America"}, "languages": {"type": "object", "description": "Languages spoken in the country", "nullable": true, "example": {"eng": "English"}}, "flagUrl": {"type": "string", "description": "URL of the country flag", "example": "https://example.com/flags/us.png"}, "timezone": {"type": "string", "description": "The country timezone", "example": "UTC-05:00"}, "latitude": {"type": "number", "format": "float", "description": "Latitude coordinates", "example": 38.8951, "nullable": true}, "longitude": {"type": "number", "format": "float", "description": "Longitude coordinates", "example": -77.0364, "nullable": true}, "callingCode": {"type": "string", "description": "International calling code", "example": "+1"}, "status": {"type": "string", "description": "Status of the country record", "enum": ["active", "inactive"], "example": "active"}, "createdAt": {"type": "string", "format": "date-time", "description": "Record creation timestamp", "example": "2024-01-01T00:00:00Z"}, "updatedAt": {"type": "string", "format": "date-time", "description": "Record last update timestamp", "example": "2024-01-01T00:00:00Z"}}, "additionalProperties": false}, "TransactionResponse": {"type": "object", "properties": {"integrator": {"type": "string", "maxLength": 255, "description": "Integrator slug"}, "transactionId": {"type": "string", "maxLength": 255, "description": "Transaction identifier."}, "status": {"type": "string", "enum": ["PENDING", "PROCESSING", "COMPLETED", "VALIDATING", "FAILED", "REFUNDED"], "default": "PENDING", "description": "Current status of the transaction"}, "countryIsoAlpha2": {"type": "string", "maxLength": 2, "description": "The ISO 3166-1 alpha-2 code for the country."}, "productType": {"type": "string", "maxLength": 100, "default": "not_set", "description": "Type of the product"}, "productSubType": {"type": "string", "maxLength": 100, "default": "not_set", "description": "Sub-type of the product"}, "sku": {"type": "string", "maxLength": 100, "default": "not_set", "description": "Product SKU identifier"}, "fiatUnitPrice": {"type": "number", "format": "decimal", "description": "Unit price in fiat currency", "default": 0}, "fiatCurrency": {"type": "string", "maxLength": 3, "description": "The ISO 4217 currency code for the currency used"}, "quantity": {"type": "integer", "default": 1, "description": "Number of items in the transaction"}, "product": {"description": "FUP product metadata", "$ref": "#/components/schemas/dto.ProductMetadata"}, "userWalletAddress": {"type": "string", "maxLength": 100, "nullable": true, "description": "User's blockchain wallet address"}, "chainId": {"type": "integer", "nullable": false, "description": "Blockchain network used for the transaction"}, "tokenUsed": {"type": "string", "maxLength": 100, "nullable": true, "description": "Token used for payment"}, "tokenAmountPaid": {"type": "number", "format": "decimal", "nullable": true, "description": "Amount of tokens paid"}, "created": {"type": "string", "format": "date-time", "description": "Transaction creation timestamp"}, "updated": {"type": "string", "format": "date-time", "description": "Transaction last update timestamp"}, "isDeleted": {"type": "boolean", "description": "Soft delete status", "default": false}, "givenReference": {"type": "string", "description": "the user provided reference"}, "recordId": {"type": "integer", "description": "Record ID in the blockchain", "nullable": true}}, "additionalProperties": false}, "dto.NetworkListResponse": {"type": "object", "properties": {"success": {"type": "boolean"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/dto.Network"}}}, "additionalProperties": false}, "dto.ProductMetadata": {"type": "object", "properties": {"name": {"type": "string", "example": "Amazon PrePaid code"}, "logoUrl": {"type": "string", "example": "..."}}, "additionalProperties": false}, "dto.Network": {"type": "object", "properties": {"name": {"type": "string", "example": "Arbitrum"}, "key": {"type": "string", "example": "arb"}, "logoUrl": {"type": "string", "format": "uri"}, "chainId": {"type": "integer", "example": 42161}, "rpcUrl": {"type": "string", "format": "uri"}, "explorerUrl": {"type": "string", "format": "uri"}, "isTestnet": {"type": "boolean"}, "networkType": {"type": "string", "enum": ["EVM", "SVM"]}, "isActive": {"type": "boolean"}, "rank": {"type": "integer"}, "protocolContracts": {"type": "object"}, "nativeToken": {"description": "Network Native Token", "$ref": "#/components/schemas/dto.NativeToken"}}, "additionalProperties": false}, "dto.NativeToken": {"type": "object", "properties": {"name": {"type": "string"}, "symbol": {"type": "string"}, "coinKey": {"type": "string"}, "address": {"type": "string", "pattern": "^0x[a-fA-F0-9]{40}$"}, "decimals": {"type": "integer"}, "logoURI": {"type": "string", "format": "uri", "nullable": true}}, "additionalProperties": false}, "dto.TokenListResponse": {"type": "object", "properties": {"success": {"type": "boolean"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/dto.RampToken"}}}, "additionalProperties": false}, "dto.RampToken": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "symbol": {"type": "string"}, "key": {"type": "string"}, "address": {"type": "string", "pattern": "^0x[a-fA-F0-9]{40}$"}, "decimals": {"type": "integer"}, "friendlyDecimals": {"type": "integer", "nullable": true}, "imageUrl": {"type": "string", "format": "uri", "nullable": true}, "minAllowance": {"type": "string", "description": "String to prevent precision loss"}, "maxAllowance": {"type": "string", "description": "String to prevent precision loss"}}, "additionalProperties": false}, "dto.WalletTransactionResponse": {"type": "object", "properties": {"totalItems": {"type": "integer", "description": "Total number of transactions"}, "totalPages": {"type": "integer", "description": "Total number of pages"}, "currentPage": {"type": "integer", "description": "Current page"}, "transactions": {"type": "array", "items": {"$ref": "#/components/schemas/dto.WalletTransaction"}}}, "additionalProperties": false}, "dto.WalletResponse": {"type": "object", "properties": {"wallet": {"description": "Wallet state details", "$ref": "#/components/schemas/dto.Wallet"}}, "additionalProperties": false}, "dto.Wallet": {"type": "object", "properties": {"walletAddress": {"type": "string", "description": "Wallet address", "example": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045"}, "hasAcceptedTerms": {"type": "boolean", "description": "Wallet owner has accepted the terms"}}, "additionalProperties": false}, "dto.WalletTransaction": {"type": "object", "properties": {"id": {"type": "string", "example": "b3d7ac95-ca57-45a0-8b15-5c6e1d1f2966"}, "status": {"type": "string", "example": "COMPLETED"}, "price": {"description": "Price to customer", "$ref": "#/components/schemas/dto.Price"}, "productType": {"description": "Product type", "type": "string", "example": "topup"}, "productSku": {"type": "string", "example": "fc4f8917-b239-43e5-935b-88af43ee9da7"}, "quantity": {"type": "string", "example": "1"}, "chainId": {"type": "integer", "nullable": false, "description": "Blockchain network used for the transaction"}, "tokenUsed": {"type": "string", "maxLength": 100, "nullable": true, "description": "Token used for payment"}, "tokenAmountPaid": {"type": "number", "format": "decimal", "nullable": true, "description": "Amount of tokens paid"}, "imageUrl": {"description": "Logo Image", "type": "string"}, "created": {"type": "string", "format": "date-time", "description": "Transaction creation timestamp"}, "brandName": {"type": "string", "description": "Name of the brand (e.g., Amazon, Verizon, TravelSim)."}, "walletAddress": {"description": "Wallet Address", "type": "string", "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"}, "blockchainTransactionHash": {"description": "Blockchain Transaction Hash", "type": "string", "example": "0x6fd1f2b0c8cc2d63df046de3f3479a819efc954ed1ed363c1dbb43111488ea05"}, "serviceId": {"description": "Service ID in the BFP", "type": "integer"}, "recordId": {"description": "Record ID in the blockchain", "type": "integer"}}, "additionalProperties": false}}, "responses": {"ConflictDuplicate": {"description": "Duplicate request detected for this Idempotency-Key.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/dto.ResponseError"}}}}}}, "securitySchemes": {"BearerAuth": {"type": "http", "scheme": "bearer", "bearerFormat": "TOKEN", "description": "Authentication: Bearer YOUR_API_KEY"}}}